<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
	ToolsVersion="4.0"
	DefaultTargets="Compile">
		
	<UsingTask AssemblyFile="$(Tools)\MSBuildCommunityTasks\MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.SqlServer.ExecuteDDL" />
		
	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<ProjectRoot>$(MSBuildProjectDirectory)\..</ProjectRoot>
		<Tools>$(ProjectRoot)\tools</Tools>
	</PropertyGroup>
	
	<PropertyGroup>
		<BuildArtefacts>$(ProjectRoot)\buildartefacts</BuildArtefacts>
	</PropertyGroup>
	
	<PropertyGroup>
		<ConnectionString>Data Source=localhost\sqlexpress;Initial Catalog=master;Integrated Security=SSPI;</ConnectionString>
		<IlcConnectionString>"Data Source=localhost\sqlexpress;Initial Catalog=Ilc;Integrated Security=SSPI;"</IlcConnectionString>
		<SqlUpdateScriptsPath>"$(ProjectRoot)\sqlScripts\AppMigrations"</SqlUpdateScriptsPath>
	</PropertyGroup>
	
	<ItemGroup>
		<NUnit Include="$(Tools)\NUnit\nunit-console.exe" />
		<TestAssembly Include="$(BuildArtefacts)\Ilc.Tests.dll" />
		<TestResults Include="$(BuildArtefacts)\TestResults.xml" />
	</ItemGroup>
	
	<ItemGroup>
		<NCoverPath Include="$(Tools)\NCover" />
		<NCoverCoverage Include="$(BuildArtefacts)\coverage.nccov" />
		<NCoverTrend Include="$(BuildArtefacts)\coverage.trend" />
		<CoverageReportDir Include="$(BuildArtefacts)\coverage\" />
	</ItemGroup>
	
	<ItemGroup>
		<FxCop Include="$(Tools)\FxCop\FxCopCmd.exe" />
		<FxCopBuildServerVersion Include="$(Tools)\FxCopBuildServer\FxCopCmd.exe" />
		<AssembliesToAnalyze Include="$(BuildArtefacts)\PnA2.Web.dll" />
		<AnalysisReport Include="$(BuildArtefacts)\FxCopAnalysis.xml" />
	</ItemGroup>
	
	<ItemGroup>
		<Website Include="$(BuildArtefacts)\_PublishedWebsites\Ilc.Web" />
	</ItemGroup>
	
	<ItemGroup>
		<MsDeploy Include="$(Tools)\Microsoft Web Deploy\msdeploy.exe" />
		<MsDeployV2 Include="$(Tools)\Microsoft Web Deploy V2\msdeploy.exe" />
		<PackageFile Include="$(BuildArtefacts)\package\Ilc.Web.zip" />
	</ItemGroup>
	
	<Target Name="Clean">
		<RemoveDir Directories="$(BuildArtefacts)" />
	</Target>
	
	<Target Name="Init" DependsOnTargets="Clean">
		<MakeDir Directories="$(BuildArtefacts)" />
	</Target>
	
	<Target Name="JSLint">
		<ItemGroup>
			<FilesToLint Include="$(ProjectRoot)\src\Ilc.Web\Scripts\app\*.js" />
		</ItemGroup>
		<!-- Timeout is set at 3 minutes (180 seconds) -->
		<Exec Command="cscript //B //NoLogo //T:180 &quot;$(Tools)\JSLint\jslint.js&quot; &quot;%(FilesToLint.FullPath)&quot; " />
	</Target>
	
	<Target Name="Compile" DependsOnTargets="Init">
		<MSBuild Projects="$(ProjectRoot)\Ilc.sln" Targets="Rebuild" Properties="OutDir=$(BuildArtefacts)\;Configuration=$(Configuration)" />
	</Target>
	
	<Target Name="Test" DependsOnTargets="Compile">
		<Exec Command="@(NUnit) @(TestAssembly) /xml=@(TestResults)" />
	</Target>
	
	<Target Name="TestWithCoverage" DependsOnTargets="Compile">
		<OpenCover
			Target="@(NUnit)"
			TargetArgs="@(TestAssembly) /xml=@(TestResults)"
			Register="true"
			TargetWorkingDir="$(BuildArtefacts)"
			Filter="+[PnA2*]*"
			Output=""/>		
	</Target>
	
	<Target Name="FxCop" DependsOnTargets="Compile">
		<Exec Command="@(FxCop) /file:@(AssembliesToAnalyze) /out:@(AnalysisReport) /verbose /directory:C:\Windows\Microsoft.NET\Framework\v4.0.30319" />
		
		<!-- From John Rayner http://www.sharpfellows.com/post/Getting-FxCop-to-break-the-build.aspx -->
		<PropertyGroup>
			<FxCopCriticalErrors>0</FxCopCriticalErrors>
			<FxCopErrors>0</FxCopErrors>
			<FxCopCriticalWarnings>0</FxCopCriticalWarnings>
			<Count>0</Count>
		</PropertyGroup>
		<XmlRead 
			ContinueOnError="True"
			XmlFileName="@(AnalysisReport)"
			XPath="string(count(//Issue[@Level='CriticalError']))">
			<Output TaskParameter="Value" PropertyName="FxCopCriticalErrors" />
		</XmlRead>
		<XmlRead 
			ContinueOnError="True"
			XmlFileName="@(AnalysisReport)"
			XPath="string(count(//Issue[@Level='Error']))">
			<Output TaskParameter="Value" PropertyName="FxCopErrors" />
		</XmlRead>
		<XmlRead 
			ContinueOnError="True"
			XmlFileName="@(AnalysisReport)"
			XPath="string(count(//Issue[@Level='CriticalWarning']))">
			<Output TaskParameter="Value" PropertyName="FxCopCriticalWarnings" />
		</XmlRead>
		<Add Numbers="$(FxCopCriticalErrors);$(FxCopErrors);$(FxCopCriticalWarnings)">
			<Output TaskParameter="Result" PropertyName="Count" />
		</Add>
		<Error 
			Text="FxCop encountered $(Count) material rule violations" 
			Condition="$(FxCopCriticalErrors) &gt; 5" />
	</Target>
	
	<Target Name="FxCopBuildServer" DependsOnTargets="Compile">
		<Exec Command="@(FxCopBuildServerVersion) /file:@(AssembliesToAnalyze) /out:@(AnalysisReport) /verbose /directory:C:\Windows\Microsoft.NET\Framework\v4.0.30319" />
		
		<!-- From John Rayner http://www.sharpfellows.com/post/Getting-FxCop-to-break-the-build.aspx -->
		<PropertyGroup>
			<FxCopCriticalErrors>0</FxCopCriticalErrors>
			<FxCopErrors>0</FxCopErrors>
			<FxCopCriticalWarnings>0</FxCopCriticalWarnings>
			<Count>0</Count>
		</PropertyGroup>
		<XmlRead 
			ContinueOnError="True"
			XmlFileName="@(AnalysisReport)"
			XPath="string(count(//Issue[@Level='CriticalError']))">
			<Output TaskParameter="Value" PropertyName="FxCopCriticalErrors" />
		</XmlRead>
		<XmlRead 
			ContinueOnError="True"
			XmlFileName="@(AnalysisReport)"
			XPath="string(count(//Issue[@Level='Error']))">
			<Output TaskParameter="Value" PropertyName="FxCopErrors" />
		</XmlRead>
		<XmlRead 
			ContinueOnError="True"
			XmlFileName="@(AnalysisReport)"
			XPath="string(count(//Issue[@Level='CriticalWarning']))">
			<Output TaskParameter="Value" PropertyName="FxCopCriticalWarnings" />
		</XmlRead>
		<Add Numbers="$(FxCopCriticalErrors);$(FxCopErrors);$(FxCopCriticalWarnings)">
			<Output TaskParameter="Result" PropertyName="Count" />
		</Add>
		<Error 
			Text="FxCop encountered $(Count) material rule violations" 
			Condition="$(FxCopCriticalErrors) &gt; 5" />
	</Target>
		
	<Target Name="Package" DependsOnTargets="Compile">
		<MSBuild Projects="$(ProjectRoot)\src\Ilc.Web\Ilc.Web.csproj" Targets="Package" Properties="PackageLocation=$(BuildArtefacts)\package\;Configuration=$(Configuration);ProjectParametersXMLFile=$(MSBuildProjectDirectory)\DeployParameters.xml" />
		<!-- Copy our parameter file -->
		<Copy SourceFiles="$(MSBuildProjectDirectory)\DeployParameters.xml" DestinationFiles="$(BuildArtefacts)\package\Ilc.Web.SetParameters.xml" />
	</Target>
		
	<Target Name="DeleteDatabase">
		<ItemGroup>
			<DropDbFile Include="$(ProjectRoot)\sqlScripts\BuildCIDrop.sql" /> 
		</ItemGroup>
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(DropDbFile)" ContinueOnError="false" />
	</Target>	
	
	<Target Name="CreateDatabase">
	<ItemGroup>
			<CreateDbFile Include="$(ProjectRoot)\sqlScripts\CreateDbFile.sql" />
			<WFStoreSchema Include="$(ProjectRoot)\sqlScripts\SqlWorkflowInstanceStoreSchema.sql" />
			<WFStoreLogic Include="$(ProjectRoot)\sqlScripts\SqlWorkflowInstanceStoreLogic.sql" />
			<WFStoreSchemaUpgrade Include="$(ProjectRoot)\sqlScripts\SqlWorkflowInstanceStoreSchemaUpgrade.sql" />
		</ItemGroup>
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(CreateDbFile)" ContinueOnError="false" />
		
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(WFStoreSchema)" ContinueOnError="false" />
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(WFStoreLogic)" ContinueOnError="false" />
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(WFStoreSchemaUpgrade)" ContinueOnError="false" />
	</Target>
	
	<Target Name="UpdateDatabase">
		<Exec Command="CALL $(tools)\Built\SqlMigrator\SqlMigrator.exe -cs:$(IlcConnectionString) -updateScriptsPath:$(SqlUpdateScriptsPath)" />
	</Target>
	
	<Target Name="CreateDatabase2008">
	<ItemGroup>
			<CreateDbFile Include="$(ProjectRoot)\sqlScripts\CreateDbFile_SQL2008.sql" />
			<WFStoreSchema Include="$(ProjectRoot)\sqlScripts\SqlWorkflowInstanceStoreSchema.sql" />
			<WFStoreLogic Include="$(ProjectRoot)\sqlScripts\SqlWorkflowInstanceStoreLogic.sql" />
			<WFStoreSchemaUpgrade Include="$(ProjectRoot)\sqlScripts\SqlWorkflowInstanceStoreSchemaUpgrade.sql" />
		</ItemGroup>
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(CreateDbFile)" ContinueOnError="false" />
		
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(WFStoreSchema)" ContinueOnError="false" />
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(WFStoreLogic)" ContinueOnError="false" />
		<ExecuteDDL ConnectionString="$(ConnectionString)" Files="@(WFStoreSchemaUpgrade)" ContinueOnError="false" />
	</Target>
	
	<Target Name="ContinousIntegrationDemoDeploy" DependsOnTargets="Package">
		<PropertyGroup>
				<Source></Source>
		</PropertyGroup>
		<Exec Command="CALL $(BuildArtefacts)\package\Ilc.Web.deploy.cmd /Y" />
	</Target>
</Project>